// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Event {
  id Int @id @default(autoincrement())

  eventId     String
  name        String
  channelId   String
  description String? @db.VarChar(4096)
  coverImage  String? @db.VarChar(512)
  hostId      String?
  messageId   String?

  active       Int       @default(1)
  scheduleTime DateTime?
  startTime    DateTime?
  endTime      DateTime?

  voiceLogs      VoiceLog[]
  stats          UserStat[]
  games          GameResult[]
  UserGameResult UserGameResult[]
}

model VoiceLog {
  id Int @id @default(autoincrement())

  eventId   Int
  userId    String
  timestamp DateTime @default(now())
  join      Boolean

  event Event    @relation(fields: [eventId], references: [id], onDelete: Cascade)
  stat  UserStat @relation(fields: [eventId, userId], references: [eventId, userId], onDelete: Cascade)
}

model UserStat {
  eventId Int
  userId  String

  duration Int
  show     Boolean?
  memo     String?  @db.VarChar(512)

  VoiceLog VoiceLog[]
  event    Event      @relation(fields: [eventId], references: [id], onDelete: Cascade)

  @@id([eventId, userId], name: "id")
}

model GameResult {
  id Int @id @default(autoincrement())

  eventId Int
  name    String
  url     String?
  image   String? @db.VarChar(512)

  users UserGameResult[]
  event Event            @relation(fields: [eventId], references: [id], onDelete: Cascade)
}

model UserGameResult {
  id Int @id @default(autoincrement())

  eventId Int
  userId  String
  gameId  Int
  rank    Int
  xp      Float
  group   String?

  event Event      @relation(fields: [eventId], references: [id], onDelete: Cascade)
  game  GameResult @relation(fields: [gameId], references: [id], onDelete: Cascade)

  @@unique([gameId, userId])
}
